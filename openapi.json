{"openapi":"3.0.0","info":{"title":"Lethean Clientside API","version":"1.0.0"},"servers":[{"url":"https://localhost:36911","description":"Lethean Clientside Service"}],"paths":{"/daemon":{"post":{"description":"Lethean Binary Control","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/chain":{"post":{"description":"Lethean Binary Control","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/chain/start":{"post":{"description":"Blockchain Functions","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"configFile":{"description":"Specify configuration file","type":"string"},"detach":{"description":"Run as daemon","type":"boolean"},"pidfile":{"description":"File path to write the daemon's PID to (optional, requires --detach)","type":"string"},"nonInteractive":{"description":"Run non-interactive","type":"boolean"},"logFile":{"description":"Specify log file","type":"string"},"logLevel":{"description":"1-4","type":"string"},"maxConcurrency":{"description":"Max number of threads to use for a parallel job","type":"string"},"dataDir":{"description":"Specify data directory","type":"string"},"testnetDataDir":{"description":"Specify testnet data directory","type":"string"},"testDropDownload":{"description":"For net tests: in download, discard ALL blocks instead checking/saving them (very fast)","type":"boolean"},"testDropDownloadHeight":{"description":"Like test-drop-download but disards only after around certain height","type":"string"},"testnet":{"description":"Run on testnet. The wallet must be launched with --testnet flag.","type":"boolean"},"enforceDnsCheckpointing":{"description":"checkpoints from DNS server will be enforced","type":"boolean"},"prepBlocksThreads":{"description":"Max number of threads to use when preparing block hashes in groups.","type":"string"},"fastBlockSync":{"description":"Sync up most of the way by using embedded, known block hashes.","type":"boolean"},"showTimeStats":{"description":"Show time-stats when processingblocks/txs and disk synchronization","type":"boolean"},"blockSyncSize":{"description":"How many blocks to sync at once during chain synchronization (0 = adaptive)","type":"string"},"checkUpdates":{"description":"Check for new versions of Lethean: [disabled|notify|download|update]","type":"string"},"fluffyBlocks":{"description":"Relay blocks as fluffy blocks where possible (automatic on testnet)","type":"boolean"},"standardJson":{"description":"Force standard JSON output (do not  return binary data in json fields)","type":"boolean"},"testnetP2pBindPort":{"description":"Port for testnet p2p network protocol","type":"string"},"p2pBindPort":{"description":"Port for p2p network protocol","type":"string"},"extraMessagesFile":{"description":"Specify file for extra messages to include into coinbase transactions","type":"string"},"startMining":{"description":"Specify wallet address to mining for","type":"string"},"miningThreads":{"description":"Specify mining threads count","type":"string"},"bgMiningEnable":{"description":"enable/disable background mining","type":"boolean"},"bgMiningIgnoreBattery":{"description":"if true, assumes plugged in when unable to query system power status","type":"boolean"},"bgMiningMinIdleInterval":{"description":"Specify min lookback interval in seconds for determining idle state","type":"string"},"bgMiningIdleThreshold":{"description":"Specify minimum avg idle percentage over lookback interval","type":"string"},"bgMiningMinerTarget":{"description":"Specify maximum percentage cpu use by miner(s)","type":"string"},"dbType":{"description":"Specify database type, available: lmdb","type":"string"},"dbSyncMode":{"description":"Specify sync option, using format [safe|fast|fastest]:[sync|async]:[nbloc ks_per_sync].","type":"string"},"dbSalvage":{"description":"Try to salvage a blockchain database if it seems corrupted","type":"boolean"},"p2pBindIp":{"description":"Interface for p2p network protocol","type":"string"},"p2pExternalPort":{"description":"External port for p2p network protocol (if port forwarding used with NAT)","type":"string"},"allowLocalIp":{"description":"Allow local ip add to peer list, mostly in debug purposes","type":"boolean"},"addPeer":{"description":"Manually add peer to local peerlist","type":"string"},"addPriorityNode":{"description":"Specify list of peers to connect to and attempt to keep the connection open","type":"string"},"addExclusiveNode":{"description":"Specify list of peers to connect to only. If this option is given the options add-priority-node and seed-node  are ignored","type":"string"},"seedNode":{"description":"Connect to a node to retrieve peer  addresses, and disconnect","type":"string"},"hideMyPort":{"description":"Do not announce yourself as peerlist candidate","type":"boolean"},"noIgd":{"description":"Disable UPnP port mapping","type":"boolean"},"offline":{"description":"Do not listen for peers, nor connect to any","type":"boolean"},"outPeers":{"description":"set max number of out peers","type":"string"},"tosFlag":{"description":"set TOS flag","type":"boolean"},"limitRateUp":{"description":"set limit-rate-up [kB/s]","type":"string"},"limitRateDown":{"description":"set limit-rate-down [kB/s]","type":"string"},"limitRate":{"description":"set limit-rate [kB/s]","type":"string"},"saveGraph":{"description":"Save data for dr functions","type":"boolean"},"rpcBindPort":{"description":"Port for RPC server","type":"string"},"testnetRpcBindPort":{"description":"Port for testnet RPC server","type":"string"},"restrictedRpc":{"description":"Restrict RPC to view only commands","type":"boolean"},"rpcBindIp":{"description":"Specify ip to bind rpc server","type":"string"},"rpcLogin":{"description":"Specify username[:password] required for RPC server","type":"string"},"confirmExternalBind":{"description":"Confirm rpc-bind-ip value is NOT a loopback (local) IP","type":"boolean"}}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/chain/export":{"post":{"description":"Blockchain Export","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"daemonAddress":{"description":"Use daemon instance at <host>:<port>","type":"string"},"dataDir":{"description":"Specify data directory","type":"string"},"testnetDataDir":{"description":"Specify testnet data directory","type":"string"},"outputFile":{"description":"Specify output file","type":"string"},"testnet":{"description":"Run on testnet.","type":"boolean"},"logLevel":{"description":"0-4 or categories","type":"string"},"database":{"description":"available: lmdb","type":"string"},"blockStop":{"description":"Stop at block number","type":"string"},"blocksdat":{"description":"Output in blocks.dat format","type":"boolean"}}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/chain/import":{"post":{"description":"Blockchain Import","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"dataDir":{"description":"Specify data directory","type":"string"},"testnetDataDir":{"description":"Specify testnet data directory","type":"string"},"testDropDownload":{"description":"For net tests: in download, discard ALL blocks instead checking/saving them (very fast)","type":"boolean"},"testDropDownloadHeight":{"description":"Like test-drop-download but disards only after around certain height","type":"string"},"testnet":{"description":"Run on testnet. The wallet must be launched with --testnet flag.","type":"boolean"},"enforceDnsCheckpointing":{"description":"checkpoints from DNS server will be enforced","type":"string"},"prepBlocksThreads":{"description":"Max number of threads to use when preparing block hashes in groups.","type":"string"},"fastBlockSync":{"description":"Sync up most of the way by using embedded, known block hashes.","type":"string"},"showTimeStats":{"description":"Show time-stats when processing blocks/txs and disk synchronization.","type":"string"},"blockSyncSize":{"description":"How many blocks to sync at once during chain synchronization (0 = adaptive).","type":"string"},"checkUpdates":{"description":"Check for new versions of monero: [disabled|notify|download|update]","type":"string"},"fluffyBlocks":{"description":"Relay blocks as fluffy blocks where possible (automatic on testnet)","type":"string"},"standardJson":{"description":"Force standard JSON output (do not return binary data in json fields)","type":"string"},"testnetP2pBindPort":{"description":"(=38772)  Port for testnet p2p network protocol","type":"string"},"p2pBindPort":{"description":"(=48772) Port for p2p network protocol","type":"string"},"extraMessagesFile":{"description":"Specify file for extra messages to include into coinbase transactions","type":"string"},"dbType":{"description":"Specify database type, available: lmdb","type":"string"},"dbSyncMode":{"description":"(=fast:async:1000) Specify sync option, using format [safe|fast|fastest]:[sync|async]:[nblocks_per_sync].","type":"string"},"dbSalvage":{"description":"Try to salvage a blockchain database if it seems corrupted","type":"string"},"countBlocks":{"description":"Count blocks in bootstrap file and exit","type":"string"},"popBlocks":{"description":"Remove blocks from end of blockchain","type":"string"},"dropHardFork":{"description":"Drop hard fork subdbs","type":"string"},"inputFile":{"description":"Specify input file","type":"string"},"logLevel":{"description":"0-4 or categories","type":"string"},"database":{"description":"available: lmdb","type":"string"},"batchSize":{"description":"available: lmdb","type":"string"},"blockStop":{"description":"Stop at block number","type":"string"},"verify":{"description":"Verify blocks and transactions during import","type":"string"},"batch":{"description":"Batch transactions for faster import","type":"string"},"resume":{"description":"Resume from current height if output database already exists","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/wallet":{"post":{"description":"","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/wallet/cli":{"post":{"description":"Wallet CLI","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"daemonAddress":{"description":"Use daemon instance at <host>:<port>","type":"string"},"daemonHost":{"description":"Use daemon instance at host <arg> instead of localhost","type":"string"},"password":{"description":"Wallet password (escape/quote as needed)","type":"string"},"passwordFile":{"description":"Wallet password file","type":"string"},"daemonPort":{"description":"Use daemon instance at port <arg> instead of 48782","type":"string"},"daemonLogin":{"description":"Specify username[:password] for daemon RPC client","type":"string"},"testnet":{"description":"For testnet. Daemon must also be launched with --testnet flag","type":"boolean"},"restrictedRpc":{"description":"Restricts to view-only commands","type":"boolean"},"walletFile":{"description":"Use wallet <arg>","type":"string"},"generateNewWallet":{"description":"Generate new wallet and save it to <arg>","type":"string"},"generateFromViewKey":{"description":"Generate incoming-only wallet from view key","type":"string"},"generateFromKeys":{"description":"Generate wallet from private keys","type":"string"},"generateFromMultisigKeys":{"description":"Generate a master wallet from multisig wallet keys","type":"string"},"generateFromJson":{"description":"Generate wallet from JSON format file","type":"string"},"upgradeLegacy":{"description":"Upgrade a pre-rebase .wallet file <arg> to the new format which is compatible with this wallet","type":"string"},"mnemonicLanguage":{"description":"Language for mnemonic","type":"string"},"command":{"description":"run command, hint, use exit to stop auto sync","type":"string"},"restoreDeterministicWallet":{"description":"Recover wallet using Electrum-style mnemonic seed","type":"boolean"},"nonDeterministic":{"description":"Create non-deterministic view and spend keys","type":"boolean"},"electrumSeed":{"description":"Specify Electrum seed for wallet recovery/creation","type":"string"},"trustedDaemon":{"description":"Enable commands which rely on a trusted daemon","type":"boolean"},"allowMismatchedDaemonVersion":{"description":"Allow communicating with a daemon that uses a different RPC version","type":"boolean"},"restoreHeight":{"description":"Restore from specific blockchain height","type":"string"},"disableRpcLogin":{"description":"Disable HTTP authentication for RPC connections served by this process","type":"boolean"},"logFile":{"description":"Specify log file","type":"string"},"logLevel":{"description":"0-4 or categories","type":"string"},"maxConcurrency":{"description":"Max number of threads to use for a parallel job","type":"string"},"configFile":{"description":"Config file","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/wallet/vpn":{"post":{"description":"Wallet VPN RPC","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"daemonAddress":{"description":"Use daemon instance at <host>:<port>","type":"string"},"daemonHost":{"description":"Use daemon instance at host <arg> instead of localhost","type":"string"},"password":{"description":"Wallet password (escape/quote as needed)","type":"string"},"passwordFile":{"description":"Wallet password file","type":"string"},"daemonPort":{"description":"Use daemon instance at port <arg> instead of 48782","type":"string"},"daemonLogin":{"description":"Specify username[:password] for daemon RPC client","type":"string"},"testnet":{"description":"For testnet. Daemon must also be launched with --testnet flag","type":"boolean"},"restrictedRpc":{"description":"Restricts to view-only commands","type":"boolean"},"vpnRpcBindPort":{"description":"Sets bind port for VPN RPC server","type":"string"},"trustedDaemon":{"description":"Enable commands which rely on a trusted daemon","type":"boolean"},"rpcBindIp":{"description":"Specify ip to bind rpc server","type":"string"},"rpcLogin":{"description":"Specify username[:password] required for RPC server","type":"string"},"confirmExternalBind":{"description":"Confirm rpc-bind-ip value is NOT a loopback (local) IP","type":"boolean"},"walletFile":{"description":"Use wallet","type":"string"},"generateFromJson":{"description":"Generate wallet from JSON format file","type":"string"},"logFile":{"description":"Specify log file","type":"string"},"logLevel":{"description":"0-4 or categories","type":"string"},"maxConcurrency":{"description":"Max number of threads to use for a parallel job","type":"string"},"configFile":{"description":"Config file","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/wallet/rpc":{"post":{"description":"Wallet RPC","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"daemonAddress":{"description":"Use daemon instance at <host>:<port>","type":"string"},"daemonHost":{"description":"Use daemon instance at host <arg> instead of localhost","type":"string"},"password":{"description":"Wallet password (escape/quote as needed)","type":"string"},"passwordFile":{"description":"Wallet password file","type":"string"},"daemonPort":{"description":"Use daemon instance at port <arg> instead of 48782","type":"string"},"daemonLogin":{"description":"Specify username[:password] for daemon RPC client","type":"string"},"testnet":{"description":"For testnet. Daemon must also be launched with --testnet flag","type":"boolean"},"restrictedRpc":{"description":"Restricts to view-only commands","type":"boolean"},"rpcBindPort":{"description":"Sets bind port for server","type":"string"},"disableRpcLogin":{"description":"Disable HTTP authentication for RPC connections served by this process","type":"boolean"},"trustedDaemon":{"description":"Enable commands which rely on a trusted daemon","type":"boolean"},"rpcBindIp":{"description":"Specify ip to bind rpc server","type":"string"},"rpcLogin":{"description":"Specify username[:password] required for RPC server","type":"string"},"confirmExternalBind":{"description":"Confirm rpc-bind-ip value is NOT a loopback (local) IP","type":"string"},"walletFile":{"description":"Use wallet","type":"string"},"generateFromJson":{"description":"Generate wallet from JSON format file","type":"string"},"walletDir":{"description":"Directory for newly created wallets","type":"string"},"logFile":{"description":"Specify log file","type":"string"},"logLevel":{"description":"0-4 or categories","type":"string"},"maxConcurrency":{"description":"Max number of threads to use for a parallel job","type":"string"},"configFile":{"description":"Config file","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/daemon/wallet/json_rpc":{"post":{"description":"Talk to the wallet RPC via the json_rpc endpoint","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"request":{"description":"payload to send","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/update":{"post":{"description":"Lethean Updater Service","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/update/lthn":{"post":{"description":"Update lthn","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"registry":{"description":"The registry name from which to upgrade.","type":"provider"},"listVersions":{"description":"Show available versions.","type":"boolean"},"version":{"description":"The version to upgrade to.","type":"string"},"force":{"description":"Replace current installation even if not out-of-date.","type":"boolean"}}}}}},"responses":{"200":{"description":"OK"}}}},"/update/cli":{"post":{"description":"Downloads the latest CLI binaries","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/filesystem":{"post":{"description":"File System","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/filesystem/list":{"post":{"description":"List entities in path","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"path":{"description":"File path to view","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/filesystem/path":{"post":{"description":"Returns correct","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"convert":{"description":"File path to convert","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/filesystem/read":{"post":{"description":"Returns file","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"path":{"description":"File path to read","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/filesystem/write":{"post":{"description":"Write a file","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"path":{"description":"File path to read","type":"string"},"data":{"description":"File data to save","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/config":{"post":{"description":"Configuration","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/config/openapi":{"post":{"description":"Returns a openapi json data object","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/config/get":{"post":{"description":"Gets a file with fresh configuration","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"file":{"description":"Specify configuration file","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/object":{"post":{"description":"Configured File Service","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"responses":{"200":{"description":"OK"}}}},"/object/get":{"post":{"description":"Returns a store json data object","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"group":{"description":"Object Group","type":"string"},"object":{"description":"Object key to fetch","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/object/set":{"post":{"description":"Returns a store json data object","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"object":{"description":"Object key to set","type":"string"},"group":{"description":"Object Group","type":"string"},"data":{"description":"Data object to save","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/object/remove":{"post":{"description":"Remove an object from storage","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"group":{"description":"Object Group","type":"string"},"object":{"description":"Object key to remove","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/object/clear":{"post":{"description":"clears object storage","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"group":{"description":"Object Group","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/object/count":{"post":{"description":"returns object count for group","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"group":{"description":"Object Group","type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}}}}
